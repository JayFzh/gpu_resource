import numpy as np
inf = np.inf


dp_result = [[[0, [-1, -1], -1], [3.4701525000000095, [-1, -1], -1], [6.940305000000019, [-1, -1], -1], [10.410457500000028, [-1, -1], -1], [13.880610000000038, [-1, -1], -1], [17.350762500000048, [-1, -1], -1], [20.820915000000056, [-1, -1], -1], [24.291067500000064, [-1, -1], -1], [27.761220000000073, [-1, -1], -1], [31.23137250000008, [-1, -1], -1], [34.70152500000009, [-1, -1], -1], [38.1716775000001, [-1, -1], -1], [41.64183000000011, [-1, -1], -1], [45.111982500000124, [-1, -1], -1], [48.582135000000136, [-1, -1], -1], [52.05228750000015, [-1, -1], -1], [55.52244000000016, [-1, -1], -1], [58.99259250000017, [-1, -1], -1], [62.46274500000018, [-1, -1], -1], [65.9328975000002, [-1, -1], -1], [69.4030500000002, [-1, -1], -1], [72.87320250000022, [-1, -1], -1], [76.34335500000023, [-1, -1], -1], [79.81350750000024, [-1, -1], -1], [83.28366000000025, [-1, -1], -1], [86.75381250000027, [-1, -1], -1], [90.22396500000028, [-1, -1], -1], [93.69411750000029, [-1, -1], -1], [97.1642700000003, [-1, -1], -1], [100.63442250000031, [-1, -1], -1], [104.10457500000032, [-1, -1], -1], [107.57472750000034, [-1, -1], -1], [111.04488000000035, [-1, -1], -1], [114.51503250000036, [-1, -1], -1], [117.98518500000037, [-1, -1], -1], [121.45533750000038, [-1, -1], -1], [124.9254900000004, [-1, -1], -1], [128.3956425000004, [-1, -1], -1], [131.86579500000042, [-1, -1], -1], [135.33594750000043, [-1, -1], -1], [138.80610000000044, [-1, -1], -1]],
[[inf, [-1, -1], -1], [inf, [-1, -1], -1], [10.710633709009896, [0, 1], 512], [13.974433648314486, [0, 1], 512], [17.382525722410687, [0, 1], 256], [20.8526782224107, [0, 2], 256], [24.322830722410707, [0, 3], 256], [27.79298322241072, [0, 4], 256], [31.263135722410727, [0, 5], 256], [34.733288222410735, [0, 6], 256], [38.20344072241075, [0, 7], 256], [41.67359322241075, [0, 8], 256], [44.88798964294435, [0, 1], 64], [47.99522447856904, [0, 1], 64], [51.13119992884637, [0, 1], 64], [54.31895318898202, [0, 1], 64], [57.57491278919221, [0, 1], 64], [60.91009441288949, [0, 1], 64], [64.33081242712976, [0, 1], 64], [67.80096492712977, [0, 2], 64], [71.27111742712978, [0, 3], 64], [74.74126992712978, [0, 4], 64], [78.21142242712979, [0, 5], 64], [81.6815749271298, [0, 6], 64], [85.15172742712981, [0, 7], 64], [88.62187992712981, [0, 8], 64], [92.09203242712982, [0, 9], 64], [95.56218492712983, [0, 10], 64], [99.03233742712985, [0, 11], 64], [102.50248992712986, [0, 12], 64], [105.97264242712987, [0, 13], 64], [109.44279492712988, [0, 14], 64], [112.9129474271299, [0, 15], 64], [116.3830999271299, [0, 16], 64], [119.85325242712992, [0, 17], 64], [123.32340492712993, [0, 18], 64], [126.79355742712994, [0, 19], 64], [130.26370992712995, [0, 20], 64], [133.73386242712996, [0, 21], 64], [137.20401492712998, [0, 22], 64], [138.961191285706, [0, 40], 4096]],
[[inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [62.10518197613598, [1, 2], 4096], [65.36898191544057, [1, 3], 4096], [68.77707398953677, [1, 4], 4096], [72.24722648953679, [1, 5], 4096], [75.7173789895368, [1, 6], 4096], [79.18753148953681, [1, 7], 4096], [82.6576839895368, [1, 8], 4096], [86.12783648953682, [1, 9], 4096], [89.59798898953683, [1, 10], 4096], [93.06814148953683, [1, 11], 4096], [68.01316456395031, [1, 2], 1024], [71.2769645032549, [1, 3], 1024], [74.6850565773511, [1, 4], 1024], [78.15520907735112, [1, 5], 1024], [81.62536157735113, [1, 6], 1024], [80.0332272191608, [1, 2], 512], [83.2970271584654, [1, 3], 512], [86.7051192325616, [1, 4], 512], [90.17527173256161, [1, 5], 512], [93.64542423256162, [1, 6], 512], [97.11557673256164, [1, 7], 512], [100.58572923256163, [1, 8], 512], [104.05588173256164, [1, 9], 512], [107.52603423256166, [1, 10], 512], [110.99618673256165, [1, 11], 512], [114.21058315309526, [1, 12], 512], [117.31781798871995, [1, 13], 512], [120.45379343899728, [1, 14], 512], [123.64154669913293, [1, 15], 512], [126.89750629934312, [1, 16], 512], [130.2326879230404, [1, 17], 512], [133.65340593728067, [1, 18], 512], [137.12355843728068, [1, 19], 512], [140.5937109372807, [1, 20], 512], [144.0638634372807, [1, 21], 512], [147.53401593728069, [1, 22], 512], [151.00416843728073, [1, 23], 512], [154.4743209372807, [1, 24], 512]],
[[inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [62.10518197613598, [2, 3], 256], [65.36898191544057, [2, 4], 256], [68.77707398953677, [2, 5], 256], [72.24722648953679, [2, 6], 256], [75.7173789895368, [2, 7], 256], [79.18753148953681, [2, 8], 256], [82.6576839895368, [2, 9], 256], [86.12783648953682, [2, 10], 256], [89.59798898953683, [2, 11], 256], [93.06814148953683, [2, 12], 256], [68.01316456395031, [2, 13], 256], [71.2769645032549, [2, 14], 256], [74.6850565773511, [2, 15], 256], [78.15520907735112, [2, 16], 256], [81.62536157735113, [2, 17], 256], [80.0332272191608, [2, 18], 256], [83.2970271584654, [2, 19], 256], [86.7051192325616, [2, 20], 256], [90.17527173256161, [2, 21], 256], [93.64542423256162, [2, 22], 256], [97.11557673256164, [2, 23], 256], [100.58572923256163, [2, 24], 256], [104.05588173256164, [2, 25], 256], [107.52603423256166, [2, 26], 256], [110.99618673256165, [2, 27], 256], [114.21058315309526, [2, 28], 256], [117.31781798871995, [2, 29], 256], [120.45379343899728, [2, 30], 256], [123.64154669913293, [2, 31], 256], [126.89750629934312, [2, 32], 256], [130.2326879230404, [2, 33], 256], [133.65340593728067, [2, 34], 256], [137.12355843728068, [2, 35], 256], [140.5937109372807, [2, 36], 256], [144.0638634372807, [2, 37], 256], [147.53401593728069, [2, 38], 256], [151.00416843728073, [2, 39], 256], [154.4743209372807, [2, 40], 256]],
[[inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [78.15520907735112, [3, 16], 256], [81.62536157735113, [3, 17], 256], [80.0332272191608, [3, 18], 256], [83.2970271584654, [3, 19], 256], [86.7051192325616, [3, 20], 256], [90.17527173256161, [3, 21], 256], [93.64542423256162, [3, 22], 256], [97.11557673256164, [3, 23], 256], [100.58572923256163, [3, 24], 256], [104.05588173256164, [3, 25], 256], [107.52603423256166, [3, 26], 256], [110.99618673256165, [3, 27], 256], [114.21058315309526, [3, 28], 256], [117.31781798871995, [3, 29], 256], [120.45379343899728, [3, 30], 256], [123.64154669913293, [3, 31], 256], [126.89750629934312, [3, 32], 256], [130.2326879230404, [3, 33], 256], [133.65340593728067, [3, 34], 256], [137.12355843728068, [3, 35], 256], [140.5937109372807, [3, 36], 256], [144.0638634372807, [3, 37], 256], [147.53401593728069, [3, 38], 256], [151.00416843728073, [3, 39], 256], [154.4743209372807, [3, 40], 256]],
[[inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [144.0638634372807, [4, 37], 256], [147.53401593728069, [4, 38], 256], [151.00416843728073, [4, 39], 256], [154.46690050850873, [4, 37], 2048]],
[[inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [inf, [-1, -1], -1], [154.46690050850873, [5, 40], 256]],
]

# trace back the results
# gather thread allocation
thread_allocation = []
comm_start_tp = []
trace_state = dp_result[-1][-1]
last_hop = trace_state[1]
while last_hop[0] != -1:
    print(trace_state)
    thread_allocation.insert(0, trace_state[-1])
    trace_state = dp_result[last_hop[0]][last_hop[1]]
    last_hop = trace_state[1]
    comm_start_tp.insert(0, trace_state[0])

print("comm start time:", comm_start_tp)
print(thread_allocation)